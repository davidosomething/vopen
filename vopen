#!/usr/bin/env bash

# vopen v0.0.2
#
# Automatically determine whether to use vim or gvim and use a single instance
# Git commit messages will use a separate vim server called GIT
#
# Copyright (c) 2015 David O'Trakoun <me@davidosomething.com>
#

_vopen() {
  local executable
  local use_server
  local has_server
  local server
  local servername
  local args
  local files

  # which executable -----------------------------------------------------------
  executable="vim"
  servername="VIM"
  use_server=true
  server=""

  if [[ -n "$DISPLAY" ]] || [[ "$DOTFILES_OS" == "Darwin" ]]; then
    executable="gvim"
    servername="GVIM"
  fi

  # In SSH
  if [[ -n "$SSH_CONNECTION" ]]; then
    use_server=false
  fi

  # Linux without X11
  if [[ "$DOTFILES_OS" == "Linux" ]] && [[ -z "$DISPLAY" ]]; then
    use_server=false
  fi

  # arg parsing ----------------------------------------------------------------
  args=""
  while [[ "$#" -gt 0 ]] && [[ ."$1" = .--* ]]; do
    case "$1" in
      "--")                   # file separator
        break                 # break out of while loop, continue to files
        ;;
      "--nofork")             # never use server if nofork
        use_server=false
        args="$args --nofork"
        ;;
      "--servername")         # custom servername
        shift                 # get next arg
        servername="$1"
        ;;
      "--"*)                  # take any other args as they are
        args="$args $1"
        ;;
    esac
    shift
  done

  # file parsing ---------------------------------------------------------------
  # If there are still args after the above...
  files=""
  while [[ "$#" -gt 0 ]]; do
    files="$files $1"
    case "$1" in
      *"MERGE_MSG"|*"COMMIT_EDITMSG")
        use_server=false
        ;;
    esac
    shift
  done

  # server use -----------------------------------------------------------------

  if [ "$use_server" = true ]; then
    has_server=$( { $executable --serverlist | grep -n1 "$servername"; } 2>&1 )
    server="--servername $servername"

    # reuse server
    if [ "$has_server" != "" ]; then
      if [ "$files" = "" ]; then
        # shellcheck disable=SC2089
        args="$args --remote-send \":call foreground()<CR>\""
      else
        args="$args --remote-silent"
      fi

    # new server
    else
      if [ "$files" = "" ]; then
        args="$args $VOPEN_DEFAULT_COMMAND"
      fi
    fi
  fi

  # execute --------------------------------------------------------------------
  # shellcheck disable=SC2086,SC2090
  $executable $server $args $files
}

_vopen "${@}"

