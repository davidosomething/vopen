#!/usr/bin/env bash

# vopen v0.0.9
#
# Automatically determine whether to use vim or gvim and use a single instance
# Git commit messages will use a separate vim server called GIT
#
# Copyright (c) 2015 David O'Trakoun <me@davidosomething.com>
#

set -eu

_vopen() {
  local gui=false
  local executable
  local use_server="false"
  local has_server=false
  local server=""
  local servername="VIM-VOPEN"
  local args
  local files
  local _vopen_editor="${VOPEN_EDITOR:-vim}"
  local _vopen_visual="${VOPEN_VISUAL:-gvim}"

  # which executable -----------------------------------------------------------

  # Has framebuffer or is OSX
  if [[ -n "$DISPLAY" ]] || [[ $OSTYPE == darwin* ]]; then
    gui=true
    servername="GVIM-VOPEN"
    use_server=${VOPEN_ALLOW_SERVER:-true}
  fi

  # Override editor if env var provides, otherwise use vim/gvim
  if [ "$gui" = true ]; then
    executable="$_vopen_visual"
  else
    executable="$_vopen_editor"
  fi

  if [ "$executable" = "nvim" ]; then
    use_server=false
  fi

  # arg parsing ----------------------------------------------------------------
  args=""
  while [[ "$#" -gt 0 ]] && [[ ."$1" = .--* ]]; do
    case "$1" in
      "--")                   # file separator
        break                 # break out of while loop, continue to files
        ;;
      "--nofork")             # never use server if nofork
        use_server=false
        args="$args --nofork"
        ;;
      "--noserver")           # don't use server at all, useful for sudoeditor
        use_server=false
        ;;
      "--servername")         # custom servername
        shift                 # get next arg
        servername="$1"
        ;;
      "--"*)                  # take any other args as they are
        args="$args $1"
        ;;
    esac
    shift
  done

  # file parsing ---------------------------------------------------------------
  # If there are still args after the above...
  files=""
  while [[ "$#" -gt 0 ]]; do
    files="$files \"$1\""
    case "$1" in
      *"MERGE_MSG"|*"COMMIT_EDITMSG")
        use_server=false
        ;;
      "/etc/sudoers")
        echo "$0"
        ;;
    esac
    shift
  done

  # server use -----------------------------------------------------------------

  if [ "$use_server" = true ]; then
    has_server=$( { $executable --serverlist | grep -n1 "$servername"; } 2>&1 )
    server="--servername $servername"

    # reuse server
    if [ "$has_server" != "" ]; then
      if [ "$files" = "" ]; then
        # shellcheck disable=SC2089
        args="$args --remote-send \":call foreground()<CR>\""
      else
        args="$args --remote-silent"
      fi

    # new server
    else
      if [ "$files" = "" ]; then
        args="$args $VOPEN_DEFAULT_COMMAND"
      fi
    fi
  fi

  # execute --------------------------------------------------------------------
  # shellcheck disable=SC2086,SC2090
  eval $executable $server $args $files
}

_vopen "$@"

